!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/borer/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
"	.vimrc	/^inoremap " ""<LEFT>$/;"	m
'	.vimrc	/^inoremap ' ''<LEFT>$/;"	m
(	.vimrc	/^inoremap ( ()<LEFT>$/;"	m
1gd	.vimrc	/^    nmap <buffer> 1gd <plug>(lsp-type-definition)$/;"	m
<C-a>	.vimrc	/^inoremap <C-a> <Esc>^i$/;"	m
<C-b>	.vimrc	/^inoremap <C-b> <Left>$/;"	m
<C-d>d	.vimrc	/^inoremap <C-d>d <Esc>^v$yo<C-r>0$/;"	m
<C-e>	.vimrc	/^inoremap <C-e> <Esc>$a$/;"	m
<C-f>	.vimrc	/^inoremap <C-f> <Right>$/;"	m
<C-h>	.vimrc	/^nnoremap <C-h> <C-w>h$/;"	m
<C-j>	.vimrc	/^nnoremap <C-j> <C-w>j$/;"	m
<C-k>	.vimrc	/^nnoremap <C-k> <C-w>k$/;"	m
<C-l>	.vimrc	/^inoremap <C-l> <Esc>ggvG$di$/;"	m
<C-l>	.vimrc	/^nnoremap <C-l> <C-w>l$/;"	m
<C-u>	.vimrc	/^inoremap <C-u> <Esc>$v^di$/;"	m
<C-w>s	.vimrc	/^nnoremap <C-w>s <C-w>s<C-w>w$/;"	m
<C-w>v	.vimrc	/^nnoremap <C-w>v <C-w>v<C-w>w$/;"	m
<F5>	.vimrc	/^nnoremap <F5> :!ctags -R<cr>$/;"	m
<Leader>b	.vimrc	/^nnoremap <silent> <Leader>b :Buffers<CR>$/;"	m
<Leader>f	.vimrc	/^nnoremap <silent> <Leader>f :Files<CR>$/;"	m
<Leader>q	.vimrc	/^nnoremap <Leader>q :Bdelete<CR>$/;"	m
<Leader>s	.vimrc	/^nnoremap <Leader>s :<C-u>call gitblame#echo()<CR>$/;"	m
<Tab>	.vimrc	/^nnoremap <Tab> :bn<CR>$/;"	m
<c-]>	.vimrc	/^    nmap <buffer> <c-]> <plug>(lsp-definition)$/;"	m
<leader>A	.vimrc	/^nnoremap <leader>A :exec "Rg ".expand("<cword>")<cr>$/;"	m
<leader>W	.vimrc	/^noremap <leader>W :wa sudo:\/\/%<CR>$/;"	m
<leader>a	.vimrc	/^nnoremap <leader>a :Rg<space>$/;"	m
<leader>df	.vimrc	/^    nmap <buffer> <leader>df <plug>(lsp-document-format)$/;"	m
<leader>drf	.vimrc	/^    nmap <buffer> <leader>drf <plug>(lsp-document-range-format)$/;"	m
<leader>g	.vimrc	/^nnoremap <leader>g :NERDTreeToggle<cr>$/;"	m
<leader>rn	.vimrc	/^    nmap <buffer> <leader>rn <plug>(lsp-rename)$/;"	m
<leader>t	.vimrc	/^noremap <leader>t :TagbarToggle<cr>$/;"	m
<leader>v	.vimrc	/^nnoremap <leader>v :NERDTreeFind<cr>$/;"	m
<leader>w	.vimrc	/^inoremap <leader>w <Esc>:wa<cr>a$/;"	m
<leader>w	.vimrc	/^nnoremap <leader>w :wa<CR>$/;"	m
<s-Tab>	.vimrc	/^nnoremap <s-Tab> :bp<CR>$/;"	m
K	.vimrc	/^    nmap <buffer> K <plug>(lsp-hover)$/;"	m
NERDTreeAutoDeleteBuffer	.vimrc	/^let NERDTreeAutoDeleteBuffer = 1  " Auto delete buffer deleted with NerdTree$/;"	v
NERDTreeShowHidden	.vimrc	/^let NERDTreeShowHidden=1$/;"	v
[	.vimrc	/^inoremap [ []<LEFT>$/;"	m
[g	.vimrc	/^    nmap <buffer> [g <Plug>(lsp-previous-diagnostic)$/;"	m
]g	.vimrc	/^    nmap <buffer> ]g <Plug>(lsp-next-diagnostic)$/;"	m
dotfiles	README.md	/^# dotfiles$/;"	c
g0	.vimrc	/^    nmap <buffer> g0 <plug>(lsp-document-symbol)$/;"	m
g:Lf_ReverseOrder	.vimrc	/^let g:Lf_ReverseOrder = 1$/;"	v
g:NERDSpaceDelims	.vimrc	/^let g:NERDSpaceDelims=1     " 注释后面自动加空格$/;"	v
g:NERDTreeGitStatusIndicatorMapCustom	.vimrc	/^let g:NERDTreeGitStatusIndicatorMapCustom = {$/;"	v
g:NERDTreeWinPos	.vimrc	/^let g:NERDTreeWinPos ="right"$/;"	v
g:airline#extensions#branch#enabled	.vimrc	/^let g:airline#extensions#branch#enabled = 1 "显示git分支$/;"	v
g:airline#extensions#tabline#buffer_nr_show	.vimrc	/^let g:airline#extensions#tabline#buffer_nr_show=1 " 显示 buffer 编号，方便切换$/;"	v
g:airline#extensions#tabline#enabled	.vimrc	/^let g:airline#extensions#tabline#enabled = 1 " 显示窗口tab和buffer$/;"	v
g:airline_powerline_fonts	.vimrc	/^let g:airline_powerline_fonts = 1  " 支持 powerline 字体$/;"	v
g:airline_symbols	.vimrc	/^    let g:airline_symbols = {}$/;"	v
g:airline_symbols	.vimrc	/^let g:airline_symbols.branch = '⎇'$/;"	v
g:airline_theme	.vimrc	/^let g:airline_theme='one'$/;"	v
g:lsp_diagnostics_echo_cursor	.vimrc	/^let g:lsp_diagnostics_echo_cursor = 1$/;"	v
g:lsp_signs_enabled	.vimrc	/^let g:lsp_signs_enabled  =  1$/;"	v
g:rustfmt_autosave	.vimrc	/^let g:rustfmt_autosave = 1 "使用rustfmt格式化代码$/;"	v
gD	.vimrc	/^    nmap <buffer> gD <plug>(lsp-implementation)$/;"	m
gW	.vimrc	/^    nmap <buffer> gW <plug>(lsp-workspace-symbol)$/;"	m
gd	.vimrc	/^    nmap <buffer> gd <plug>(lsp-declaration)$/;"	m
gr	.vimrc	/^    nmap <buffer> gr <plug>(lsp-references)$/;"	m
lsp_install	.vimrc	/^augroup lsp_install$/;"	a
mapleader	.vimrc	/^let mapleader=','$/;"	v
s:on_lsp_buffer_enabled	.vimrc	/^function! s:on_lsp_buffer_enabled() abort$/;"	f
ss	.vimrc	/^nmap ss <Plug>(easymotion-s2)$/;"	m
tagbar_left	.vimrc	/^let tagbar_left=1$/;"	v
{	.vimrc	/^inoremap { {}<LEFT>$/;"	m
